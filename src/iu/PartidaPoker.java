/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iu;

import Controladores.ControladorPartidaPoker;
import Vistas.VistaPartidaPoker;
import java.util.ArrayList;
import logica.Juego;
import logica.Participante;
import javax.swing.*;


/**
 *
 * @author Gabriel
 */
public class PartidaPoker extends javax.swing.JDialog implements VistaPartidaPoker {

    /**
     * Creates new form PartidaPoker
     */
    private ControladorPartidaPoker ctrlPoker;

    public PartidaPoker(java.awt.Frame parent, boolean modal, Juego juego, Participante participante) {
        super(parent, modal);
        initComponents();
        this.ctrlPoker = new ControladorPartidaPoker(this, juego, participante);
        inhabilitarBotones();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMensaje = new javax.swing.JLabel();
        jCarta1 = new javax.swing.JButton();
        jCarta2 = new javax.swing.JButton();
        jCarta3 = new javax.swing.JButton();
        jCarta4 = new javax.swing.JButton();
        jCarta5 = new javax.swing.JButton();
        jBtnApostar = new javax.swing.JButton();
        jBtnPasar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaJugadores = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSaldo = new javax.swing.JLabel();
        jPozo = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jMensaje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jMensaje.setText("ESPERANDO PARA EMPEZAR");

        jCarta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCarta1ActionPerformed(evt);
            }
        });
        jCarta1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jCarta1PropertyChange(evt);
            }
        });

        jCarta2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCarta2ActionPerformed(evt);
            }
        });

        jBtnApostar.setText("APOSTAR");
        jBtnApostar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnApostarActionPerformed(evt);
            }
        });

        jBtnPasar.setText("PASAR");
        jBtnPasar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPasarActionPerformed(evt);
            }
        });

        listaJugadores.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listaJugadores);

        jLabel1.setText("Tu Saldo:");

        jLabel2.setText("Pozo Acumulado:");

        jLabel3.setText("Participantes del Juego:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jBtnApostar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110)
                        .addComponent(jBtnPasar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jMensaje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCarta1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jCarta2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jCarta3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jCarta4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jCarta5, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jSaldo))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jPozo))
                            .addComponent(jLabel3))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jCarta1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCarta2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCarta3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCarta4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCarta5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jSaldo))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jPozo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnApostar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnPasar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCarta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCarta1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCarta1ActionPerformed

    private void jCarta2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCarta2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCarta2ActionPerformed

    private void jBtnApostarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnApostarActionPerformed
        String respuesta = JOptionPane.showInputDialog(this, "Cuanto apuesta?", "Ingresar apuesta", -1);
        if(respuesta!=null){
            int iRes = Integer.parseInt(respuesta);
            System.out.println(respuesta);
            ctrlPoker.apostar(iRes);
        }
        
    }//GEN-LAST:event_jBtnApostarActionPerformed

    private void jCarta1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jCarta1PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jCarta1PropertyChange

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
        ctrlPoker.salirJuego();
    }//GEN-LAST:event_formWindowClosing

    private void jBtnPasarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPasarActionPerformed
        ctrlPoker.pasar();
    }//GEN-LAST:event_jBtnPasarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnApostar;
    private javax.swing.JButton jBtnPasar;
    private javax.swing.JButton jCarta1;
    private javax.swing.JButton jCarta2;
    private javax.swing.JButton jCarta3;
    private javax.swing.JButton jCarta4;
    private javax.swing.JButton jCarta5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jMensaje;
    private javax.swing.JLabel jPozo;
    private javax.swing.JLabel jSaldo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList listaJugadores;
    // End of variables declaration//GEN-END:variables

    private JButton[] crearArrayBotones() {
        JButton[] botones = new JButton[5];
        botones[0] = jCarta1;
        botones[1] = jCarta2;
        botones[2] = jCarta3;
        botones[3] = jCarta4;
        botones[4] = jCarta5;
        return botones;
    }

    @Override
    public void cargarVistaParticipante(Participante p) {
    }

    @Override
    public void alertarApuesta(String apostador, int monto) {
        inhabilitarBotones();
        String mensaje = apostador + "ha apostado " + monto + " ¿quieres igualar?";
        int respuesta = JOptionPane.showOptionDialog(this, mensaje, "Nueva Apuesta", -1, JOptionPane.OK_CANCEL_OPTION, null, new String[]{"Aceptar", "Retirarse"}, "default");
        if (respuesta == 0) {
            //acepta
            ctrlPoker.aceptarApuesta();
        } else {
            //rechaza
            ctrlPoker.rechazarApuesta();
        }
    }

    @Override
    public void mostrarDatos(String titulo, int saldo) {
        this.setTitle(titulo);
        jSaldo.setText(Integer.toString(saldo));
    }

    @Override
    public void mostrarCartas(ArrayList<String> cartas) {
        if (cartas != null) {
            asignarRutaBoton(cartas);
        } else {
            JButton[] botones = crearArrayBotones();
            for (JButton b : botones) {
                String imagenDefault = "cartas\\Invertida.gif";
                Icon imagen = new ImageIcon(imagenDefault);
                b.setIcon(imagen);
            }
        }
    }

    private void asignarRutaBoton(ArrayList<String> cartas) {
        JButton[] botones = crearArrayBotones();
        for (int x = 0; x < 5; x++) {
            Icon imagen = new ImageIcon(crearRutaImagen(cartas.get(x)));
            botones[x].setIcon(imagen);
        }
    }

    private String crearRutaImagen(String nombreCarta) {
        return "cartas\\" + nombreCarta + ".gif";
    }

    @Override
    public void mensajeListaEspera(int faltantes) {
        jMensaje.setText("Esperando inicio del juego, faltan: " + faltantes);
    }

    @Override
    public void mensajeMano(String nomFigura, String cartaAlta) {
        if(nomFigura!=null){
            jMensaje.setText("Tienes figura: " + nomFigura);
        }else{
            jMensaje.setText("No tienes figura y tu carta más alta es: " + cartaAlta);
        }
    }

    @Override
    public void habilitarBotones() {
        jBtnApostar.setEnabled(true); 
        jBtnPasar.setEnabled(true); 
    }
    
    @Override
    public void inhabilitarBotones(){
        jBtnApostar.setEnabled(false); 
        jBtnPasar.setEnabled(false); 
    }

    @Override
    public void vaciarMensaje() {
        jMensaje.setText("");
    }

    @Override
    public void consultarSiContinua() {
        int respuesta = JOptionPane.showOptionDialog(this, "¿Deseas unirte a la siguiente ronda?", "¿Continuar Jugando?", -1, JOptionPane.YES_NO_OPTION, null, new String[]{"Continuar", "Retirarse"}, "default");
        if (respuesta == 0) {
            //acepta
            ctrlPoker.continuar();
        } else {
            //rechaza
            ctrlPoker.salirRonda();
            ctrlPoker.salirJuego();
        }
    }

    @Override
    public void avisarNoContinua() {
        //JOptionPane.showMessageDialog(this,"No tienes fondos para continuar");
        JOptionPane.showMessageDialog(this, "No tienes fondos para continuar", "", -1, null);
        ctrlPoker.salirJuego();
    }
    
    @Override
    public void cerrarVista() {
        this.dispose();
    }

 
    @Override
    public void informarSobreGanadorRonda(String nombreUsu, String figura) {
        String mensaje = "El ganador/a es " + nombreUsu + " con " + figura + "!"; 
        JOptionPane.showMessageDialog(this, mensaje, "", -1, null);
    }

    @Override
    public void mostrarJugadores(ArrayList<Participante> participantes) {
        listaJugadores.setListData(participantes.toArray());
    }

    @Override
    public void mostrarPozo(int monto) {
        jPozo.setText(Integer.toString(monto));
    }

    @Override
    public void avisarGanadorJuego(String nombreUsu) {
        String mensaje = "Felicitaciones " + nombreUsu + "eres el ganador!!!";
        JOptionPane.showMessageDialog(this, mensaje, "", -1, null);
        //ctrlPoker.salirJuego();
    }

  
}
